{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import\"./App.css\";import mondaySdk from\"monday-sdk-js\";import\"monday-ui-react-core/dist/main.css\";import AttentionBox from\"monday-ui-react-core/dist/AttentionBox.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const monday=mondaySdk();const App=()=>{const[items,setItems]=useState([]);const[userName,setUserName]=useState(null);const[boardData,setBoardData]=useState(null);const[columns,setColumns]=useState([]);const[groups,setGroups]=useState([]);useEffect(()=>{// GraphQL query to fetch user name and board details\nconst query=\"query {\\n      me {\\n        name\\n      }\\n      boards(ids: 6715436980) {\\n        name\\n        columns {\\n          title\\n          id\\n          type\\n        }\\n        groups {\\n          title\\n          id\\n        }\\n        items {\\n          id\\n          name\\n          column_values {\\n            id\\n            text\\n          }\\n        }\\n      }\\n    }\";monday.api(query).then(res=>{if(res.data){const board=res.data.boards[0];setUserName(res.data.me.name);setBoardData(board.name);setColumns(board.columns);setGroups(board.groups);setItems(board.items);}else{console.error('No data returned from Monday API:',res);}}).catch(error=>{console.error('Error fetching data from Monday API:',error);});},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(AttentionBox,{title:\"Hello Monday Apps!\",text:\"User: \".concat(userName),type:\"success\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Board Data\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Name: \",boardData]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Columns\"}),/*#__PURE__*/_jsx(\"ul\",{children:columns.map(column=>/*#__PURE__*/_jsxs(\"li\",{children:[column.title,\" (Type: \",column.type,\")\"]},column.id))})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Groups\"}),/*#__PURE__*/_jsx(\"ul\",{children:groups.map(group=>/*#__PURE__*/_jsx(\"li\",{children:group.title},group.id))})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Items\"}),items.map(item=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:item.name}),/*#__PURE__*/_jsx(\"ul\",{children:item.column_values.map(column=>/*#__PURE__*/_jsxs(\"li\",{children:[column.id,\": \",column.text]},column.id))})]},item.id))]})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","mondaySdk","AttentionBox","jsx","_jsx","jsxs","_jsxs","monday","App","items","setItems","userName","setUserName","boardData","setBoardData","columns","setColumns","groups","setGroups","query","api","then","res","data","board","boards","me","name","console","error","catch","className","children","title","text","concat","type","map","column","id","group","item","column_values"],"sources":["D:/prueba_monday/prueba 04-06-2024/quickstart-react/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport \"monday-ui-react-core/dist/main.css\";\nimport AttentionBox from \"monday-ui-react-core/dist/AttentionBox.js\";\n\nconst monday = mondaySdk();\n\nconst App = () => {\n  const [items, setItems] = useState([]);\n  const [userName, setUserName] = useState(null);\n  const [boardData, setBoardData] = useState(null);\n  const [columns, setColumns] = useState([]);\n  const [groups, setGroups] = useState([]);\n\n  useEffect(() => {\n    // GraphQL query to fetch user name and board details\n    const query = `query {\n      me {\n        name\n      }\n      boards(ids: 6715436980) {\n        name\n        columns {\n          title\n          id\n          type\n        }\n        groups {\n          title\n          id\n        }\n        items {\n          id\n          name\n          column_values {\n            id\n            text\n          }\n        }\n      }\n    }`;\n\n    monday.api(query).then(res => {\n      if (res.data) {\n        const board = res.data.boards[0];\n        setUserName(res.data.me.name);\n        setBoardData(board.name);\n        setColumns(board.columns);\n        setGroups(board.groups);\n        setItems(board.items);\n      } else {\n        console.error('No data returned from Monday API:', res);\n      }\n    }).catch(error => {\n      console.error('Error fetching data from Monday API:', error);\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <AttentionBox\n        title=\"Hello Monday Apps!\"\n        text={`User: ${userName}`}\n        type=\"success\"\n      />\n      <div>\n        <h2>Board Data</h2>\n        <p>Name: {boardData}</p>\n      </div>\n      <div>\n        <h2>Columns</h2>\n        <ul>\n          {columns.map(column => (\n            <li key={column.id}>{column.title} (Type: {column.type})</li>\n          ))}\n        </ul>\n      </div>\n      <div>\n        <h2>Groups</h2>\n        <ul>\n          {groups.map(group => (\n            <li key={group.id}>{group.title}</li>\n          ))}\n        </ul>\n      </div>\n      <div>\n        <h2>Items</h2>\n        {items.map(item => (\n          <div key={item.id}>\n            <h3>{item.name}</h3>\n            <ul>\n              {item.column_values.map(column => (\n                <li key={column.id}>{column.id}: {column.text}</li>\n              ))}\n            </ul>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}